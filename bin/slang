#!/usr/bin/env ruby

require_relative '../lib/slang'

include SLang

prog = [:do,
        [:operator, :+, [:Integer, :Integer], :Integer],
        [:operator, :-, [:Integer, :Integer], :Integer],
        [:operator, :*, [:Integer, :Integer], :Integer],
        [:operator, :/, [:Integer, :Integer], :Integer],
        [:operator, :%, [:Integer, :Integer], :Integer],
        [:operator, :>, [:Integer, :Integer], :Bool],
        [:operator, :<, [:Integer, :Integer], :Bool],
        [:operator, :>=, [:Integer, :Integer], :Bool],
        [:operator, :<=, [:Integer, :Integer], :Bool],
        [:operator, :==, [:Integer, :Integer], :Bool],
        [:operator, :!=, [:Integer, :Integer], :Bool],
        [:operator, :+, [:Integer, :Float], :Float],
        [:operator, :-, [:Integer, :Float], :Float],
        [:operator, :*, [:Integer, :Float], :Float],
        [:operator, :/, [:Integer, :Float], :Float],
        [:operator, :%, [:Integer, :Float], :Float],
        [:operator, :>, [:Integer, :Float], :Bool],
        [:operator, :<, [:Integer, :Float], :Bool],
        [:operator, :>=, [:Integer, :Float], :Bool],
        [:operator, :<=, [:Integer, :Float], :Bool],
        [:operator, :==, [:Integer, :Float], :Bool],
        [:operator, :!=, [:Integer, :Float], :Bool],
        [:operator, :+, [:Float, :Integer], :Float],
        [:operator, :-, [:Float, :Integer], :Float],
        [:operator, :*, [:Float, :Integer], :Float],
        [:operator, :/, [:Float, :Integer], :Float],
        [:operator, :%, [:Float, :Integer], :Float],
        [:operator, :>, [:Float, :Integer], :Bool],
        [:operator, :<, [:Float, :Integer], :Bool],
        [:operator, :>=, [:Float, :Integer], :Bool],
        [:operator, :<=, [:Float, :Integer], :Bool],
        [:operator, :==, [:Float, :Integer], :Bool],
        [:operator, :!=, [:Float, :Integer], :Bool],
        [:operator, :+, [:Float, :Float], :Float],
        [:operator, :-, [:Float, :Float], :Float],
        [:operator, :*, [:Float, :Float], :Float],
        [:operator, :/, [:Float, :Float], :Float],
        [:operator, :%, [:Float, :Float], :Float],
        [:operator, :>, [:Float, :Float], :Bool],
        [:operator, :<, [:Float, :Float], :Bool],
        [:operator, :>=, [:Float, :Float], :Bool],
        [:operator, :<=, [:Float, :Float], :Bool],
        [:operator, :==, [:Float, :Float], :Bool],
        [:operator, :!=, [:Float, :Float], :Bool],
        [:operator, :'&&', [:Bool, :Bool], :Bool],
        [:operator, :'||', [:Bool, :Bool], :Bool],
        [:operator, :!, [:Bool, :Bool], :Bool],

        [:external, :puts, [:String], :Integer],
        [:external, :strlen, [:String], :Integer],
        [:external, :realloc, [:String, :Integer], :String],
        [:external, :strcat, [:String, :String], :String],
        [:external, :strdup, [:String], :String],

        [:class, :Integer, nil,
         [:fun, :+, [:n], [:+, nil, [:self, :n]]],
         [:fun, :-, [:n], [:-, nil, [:self, :n]]],
         [:fun, :*, [:n], [:*, nil, [:self, :n]]],
         [:fun, :/, [:n], [:/, nil, [:self, :n]]],
         [:fun, :%, [:n], [:%, nil, [:self, :n]]],
         [:fun, :>, [:n], [:>, nil, [:self, :n]]],
         [:fun, :<, [:n], [:<, nil, [:self, :n]]],
         [:fun, :>=, [:n], [:>=, nil, [:self, :n]]],
         [:fun, :<=, [:n], [:<=, nil, [:self, :n]]],
         [:fun, :==, [:n], [:==, nil, [:self, :n]]],
         [:fun, :!=, [:n], [:!=, nil, [:self, :n]]],
        ],
        [:class, :Float, nil,
         [:fun, :+, [:n], [:+, nil, [:self, :n]]],
         [:fun, :-, [:n], [:-, nil, [:self, :n]]],
         [:fun, :*, [:n], [:*, nil, [:self, :n]]],
         [:fun, :/, [:n], [:/, nil, [:self, :n]]],
         [:fun, :%, [:n], [:%, nil, [:self, :n]]],
         [:fun, :>, [:n], [:>, nil, [:self, :n]]],
         [:fun, :<, [:n], [:<, nil, [:self, :n]]],
         [:fun, :>=, [:n], [:>=, nil, [:self, :n]]],
         [:fun, :<=, [:n], [:<=, nil, [:self, :n]]],
         [:fun, :==, [:n], [:==, nil, [:self, :n]]],
         [:fun, :!=, [:n], [:!=, nil, [:self, :n]]],
        ],
        [:class, :Bool, nil,
         [:fun, :or, [:n], [:'||', nil, [:self, :n]]],
         [:fun, :and, [:n], [:'&&', nil, [:self, :n]]],
         [:fun, :not, [:n], [:!, nil, [:self, :n]]],
        ],
        [:class, :String, nil,
         [:fun, :echo, [], [:puts, nil, [:self]]],
         [:fun, :len, [], [:strlen, nil, [:self]]],
         [:fun, :<<, [:s], [[:set, :len, [:+, [:+, [:len, :self], [[:len, :s]]], [1]]],
                            [:set, :self, [:realloc, nil, [:self, :len]]],
                            [:strcat, nil, [:self, :s]]]],
         [:fun, :dup, [], [:strdup, nil, [:self]]]
        ],
        [:class, :Greeter, nil,
            [:fun, :set_name, [:name], [:set, :@name, :name]],
            [:fun, :say_hello, [], [:echo, [:<<, [:dup, "hello, "], [:@name]]]],
            [:fun, :set_id, [:id], [:set, :@id, :id]],
            [:fun, :get_id, [], [:ret, :@id]]
        ],
        [:echo, [:<<, [:dup, "Hello"], [" World"]]],
        [:set, :f, [:new, :Greeter]],
        [:set, :g, [:new, :Greeter]],
        [:set, :h, [:new, :Greeter]],
        [:set, :i, [:new, :Greeter]],
        [:set_id, :f, ["01"]],
        [:get_id, :f],
        [:set_name, :g, ["Prostory"]],
        [:say_hello, :g],
        [:set_id, :g, [1]],
        [:set_id, :h, [2]],
        [:set_id, :i, [3]],
        [:get_id, :i]
]

main_prog = [:fun, :main, [], prog << [:ret, [:or, [:>, 1.5, [[:*, 1.2, [1.8]]]], [[:>, [:/, 5, [2.0]], [2]]]]], :Integer]

puts CLang::Context.new.gen_code(Parser.parse(main_prog))